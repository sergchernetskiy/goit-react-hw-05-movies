{"version":3,"file":"static/js/284.ba715213.chunk.js","mappings":"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","sources":["components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","components/Cast/Cast.jsx","hooks/useCast.js","components/Loader/Loader.jsx","service/movie-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * ${p => p.theme.space[4]}px);\n  margin-left: calc(-1 * ${p => p.theme.space[4]}px);\n  padding-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const Item = styled.li`\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  flex-basis: calc(100% / 7 - ${p => p.theme.space[4]}px);\n\n  list-style: none;\n\n  border-top: 2px solid ${p => p.theme.colors.accent};\n  border-bottom: 2px solid ${p => p.theme.colors.accent};\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const WrapperImg = styled.div`\n  width: 100%;\n  height: 210px;\n\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const ActorName = styled.p`\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Character = styled.p`\n  font-size: ${p => p.theme.fontSizes.xs};\n  color: ${p => p.theme.colors.brown};\n`;\n","import PropTypes from 'prop-types';\nimport image from 'images/no-image-available.jpg';\n\nimport {\n  List,\n  Item,\n  WrapperImg,\n  ActorName,\n  Character,\n} from './ActorsList.styled';\n\nconst ActorsList = ({ actors }) => {\n  return (\n    <List>\n      {actors.map(({ id, name, character, profile_path }) => {\n        return (\n          <Item key={id}>\n            <WrapperImg>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : image\n                }\n                alt={name}\n              />\n            </WrapperImg>\n            <ActorName>{name}</ActorName>\n            {character && <Character>{character}</Character>}\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nActorsList.propTypes = {\n  actorsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default ActorsList;\n","import toast from 'react-hot-toast';\n\nimport { Container } from 'components/Container/Container';\nimport { useCast } from 'hooks/useCast';\nimport ActorsList from 'components/ActorsList/ActorsList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { actors, loading, error } = useCast();\n\n  return (\n    <main>\n      <section>\n        <Container>\n          {actors && actors.length > 0 && <ActorsList actors={actors} />}\n          {actors && actors.length === 0 && (\n            <div>We don`t have any casts for this movie.</div>\n          )}\n          {error && toast.error('Something went wrong. ðŸ˜” Try again.')}\n          {loading && <Loader />}\n        </Container>\n      </section>\n    </main>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovies } from 'service/movie-service';\n\nexport const useCast = () => {\n  const [actors, setActors] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoading(true);\n\n        const { cast } = await getMovies(`/movie/${movieId}/credits`);\n\n        setActors([...cast]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return { actors, loading, error };\n};\n","import { DNA } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"120\"\n      width=\"120\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import axios from 'axios';\n\nconst PER_PAGE = 20;\nconst API_KEY = '6e63ae3d3fa9b74b5acead8aeaa911b2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// axios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  per_page: PER_PAGE,\n  api_key: API_KEY,\n};\n\nexport const getMovies = async url => {\n  const response = await axios.get(`${url}`);\n  return response.data;\n};\n"],"names":["List","styled","p","theme","space","Item","colors","accent","WrapperImg","ActorName","fonts","body","fontWeights","heading","fontSizes","s","Character","xs","brown","actors","map","id","name","character","profile_path","src","image","alt","useState","setActors","loading","setLoading","error","setError","movieId","useParams","useEffect","fetch","getMovies","cast","useCast","Container","length","toast","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","axios","per_page","api_key","url","response","data"],"sourceRoot":""}