{"version":3,"file":"static/js/578.f31fc210.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,eAGlB,C,yLCXYC,EAAOC,EAAAA,GAAAA,GAAH,wIACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEK,SAAAF,GAAC,OAAIA,EAAEC,MAAME,MAAMC,MAAlB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,QAAQC,OAApB,IAKJC,EAASR,EAAAA,GAAAA,EAAH,8GACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,OAAlB,IACD,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,YAAYD,OAAxB,IACH,SAAAT,GAAC,OAAIA,EAAEC,MAAMU,UAAUC,CAAtB,IACG,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPW,EAAUd,EAAAA,GAAAA,EAAH,gIACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,MAAMM,IAAlB,IACH,SAAAd,GAAC,OAAIA,EAAEC,MAAMU,UAAUI,CAAtB,IACL,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,OAAOC,KAAnB,IAEK,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCIlB,EAzBoB,SAAC,GAAqB,IAAnBgB,EAAkB,EAAlBA,YACrB,OACE,wBACGA,EAAYC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,UAACxB,EAAD,YACE,SAACS,EAAD,4BAAoBc,MACpB,SAACR,EAAD,UAAUS,MAFDF,EAKd,KAGN,E,SCYD,EArBgB,WACd,MCHwB,WACxB,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,sGAEVN,GAAW,GAFD,UAIgBO,EAAAA,EAAAA,GAAU,UAAD,OAAWJ,EAAX,aAJzB,gBAIFK,EAJE,EAIFA,QAERV,EAAWU,GAND,gDAQVN,EAAS,EAAD,IARE,yBAUVF,GAAW,GAVD,4EAAH,qDAcXM,GACD,GAAE,CAACH,IAEG,CAAEN,QAAAA,EAASE,QAAAA,EAASE,MAAAA,EAC5B,CDtBqCQ,GAA5BZ,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,QAASE,EAA1B,EAA0BA,MAE1B,OACE,2BACE,8BACE,UAACS,EAAA,EAAD,WACGb,GAAWA,EAAQc,OAAS,IAC3B,SAAC,EAAD,CAAapB,YAAaM,IAE3BA,GAA8B,IAAnBA,EAAQc,SAClB,uEAEDV,GAASW,EAAAA,GAAAA,MAAY,iDACrBb,IAAW,SAACnC,EAAA,EAAD,UAKrB,C,kGEtBDiD,EAAAA,EAAAA,SAAAA,QAAyB,+BAGzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,SANe,GAOfC,QANc,oCAST,IAAMR,EAAS,mCAAG,WAAMS,GAAN,uFACAH,EAAAA,EAAAA,IAAA,UAAaG,IADb,cACjBC,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews.jsx","hooks/useReviews.js","service/movie-service.js"],"sourcesContent":["import { DNA } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"120\"\n      width=\"120\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[3]}px;\n\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.regular};\n\n  list-style: none;\n`;\n\nexport const Author = styled.p`\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Content = styled.p`\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.brown};\n\n  text-indent: ${p => p.theme.space[5]}px;\n  text-align: justify;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Author, Content } from './ReviewsList.styled';\n\nconst ReviewsList = ({ ReviewsInfo }) => {\n  return (\n    <ul>\n      {ReviewsInfo.map(({ id, author, content }) => {\n        return (\n          <Item key={id}>\n            <Author>{`Author: ${author}`}</Author>\n            <Content>{content}</Content>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewsList.propTypes = {\n  ReviewsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n\nexport default ReviewsList;\n","import toast from 'react-hot-toast';\n\nimport { Container } from 'components/Container/Container';\nimport { useReviews } from 'hooks/useReviews';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { reviews, loading, error } = useReviews();\n\n  return (\n    <main>\n      <section>\n        <Container>\n          {reviews && reviews.length > 0 && (\n            <ReviewsList ReviewsInfo={reviews} />\n          )}\n          {reviews && reviews.length === 0 && (\n            <div>We don`t have any reviews for this movie.</div>\n          )}\n          {error && toast.error('Something went wrong. ðŸ˜” Try again.')}\n          {loading && <Loader />}\n        </Container>\n      </section>\n    </main>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovies } from 'service/movie-service';\n\nexport const useReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoading(true);\n\n        const { results } = await getMovies(`/movie/${movieId}/reviews`);\n\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return { reviews, loading, error };\n};\n","import axios from 'axios';\n\nconst PER_PAGE = 20;\nconst API_KEY = '6e63ae3d3fa9b74b5acead8aeaa911b2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// axios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  per_page: PER_PAGE,\n  api_key: API_KEY,\n};\n\nexport const getMovies = async url => {\n  const response = await axios.get(`${url}`);\n  return response.data;\n};\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Item","styled","p","theme","space","radii","normal","shadows","regular","Author","fonts","heading","fontWeights","fontSizes","m","Content","body","s","colors","brown","ReviewsInfo","map","id","author","content","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetch","getMovies","results","useReviews","Container","length","toast","axios","per_page","api_key","url","response","data"],"sourceRoot":""}